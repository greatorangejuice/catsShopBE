{"version":3,"file":"src/functions/getProducts/handler.js","mappings":"yDAMO,MAAMA,EAAqB,CAACC,EAAmCC,EAAa,OAC1E,CACLC,QAAS,CACP,8BAAgC,IAChC,oCAAqC,GAEvCD,WAAAA,EACAE,KAAMC,KAAKC,UAAUL,M,uECVlB,MAAMM,EAAWC,GACf,IAAMA,GAASC,IAAI,Q,QCJ5BC,EAAOC,QAAUC,QAAQ,gB,QCAzBF,EAAOC,QAAUC,QAAQ,iC,QCAzBF,EAAOC,QAAUC,QAAQ,O,OCAzBF,EAAOC,QAAUC,QAAQ,iCCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,QCpBfG,EAAoBK,EAAKT,IACxB,IAAIU,EAASV,GAAUA,EAAOW,WAC7B,IAAOX,EAAiB,QACxB,IAAM,EAEP,OADAI,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRN,EAAoBQ,EAAI,CAACX,EAASa,KACjC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEf,EAASc,IAC5EE,OAAOC,eAAejB,EAASc,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EX,EAAoBY,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFlB,EAAoBsB,EAAKzB,IACH,oBAAX0B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAejB,EAAS0B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAejB,EAAS,aAAc,CAAE4B,OAAO,K,6FCCvD,MAAM,QAACC,EAAO,QAAEC,EAAO,YAAEC,EAAW,YAAEC,EAAW,YAAEC,GAAeC,QAAQC,IACpEC,EAAY,CACdC,KAAMR,EACNS,KAAMR,EACNS,SAAUR,EACVS,KAAMR,EACNS,SAAUR,EACVS,IAAK,CACDC,oBAAoB,GAExBC,wBAAyB,KAGhBC,EAAUC,MAAOC,IAC1B,MAAMC,EAAS,IAAI,EAAAC,OAAOb,SACpBY,EAAOE,UACbC,QAAQC,IAAI,aAAcL,GAE1B,IAII,MAAM,KAACM,SAAcL,EAAOM,MACxB,4HAEJ,OAAO,OAAmB,CACtBC,KAAMF,IAEZ,MAAON,GACL,OAAO,OAAmB,CACtBS,QAAST,EAAES,SACZ,K,QAEHR,EAAOS,QAKFC,GAAO,OAAQb,I","sources":["webpack://product-service/./src/libs/apiGateway.ts","webpack://product-service/./src/libs/lambda.ts","webpack://product-service/external \"@middy/core\"","webpack://product-service/external \"@middy/http-json-body-parser\"","webpack://product-service/external \"pg\"","webpack://product-service/external \"source-map-support/register\"","webpack://product-service/webpack/bootstrap","webpack://product-service/webpack/runtime/compat get default export","webpack://product-service/webpack/runtime/define property getters","webpack://product-service/webpack/runtime/hasOwnProperty shorthand","webpack://product-service/webpack/runtime/make namespace object","webpack://product-service/./src/functions/getProducts/handler.ts"],"sourcesContent":["import type { APIGatewayProxyEvent, APIGatewayProxyResult, Handler } from \"aws-lambda\"\r\nimport type { FromSchema } from \"json-schema-to-ts\";\r\n\r\ntype ValidatedAPIGatewayProxyEvent<S> = Omit<APIGatewayProxyEvent, 'body'> & { body: FromSchema<S> }\r\nexport type ValidatedEventAPIGatewayProxyEvent<S> = Handler<ValidatedAPIGatewayProxyEvent<S>, APIGatewayProxyResult>\r\n\r\nexport const formatJSONResponse = (response: Record<string, unknown>, statusCode = 200) => {\r\n  return {\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\" : \"*\", // Required for CORS support to work\r\n      \"Access-Control-Allow-Credentials\" : true // Required for cookies, authorization headers with HTTPS\r\n    },\r\n    statusCode,\r\n    body: JSON.stringify(response)\r\n  }\r\n}\r\n","import middy from \"@middy/core\"\nimport middyJsonBodyParser from \"@middy/http-json-body-parser\"\n\nexport const middyfy = (handler) => {\n  return middy(handler).use(middyJsonBodyParser())\n}\n","module.exports = require(\"@middy/core\");","module.exports = require(\"@middy/http-json-body-parser\");","module.exports = require(\"pg\");","module.exports = require(\"source-map-support/register\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import 'source-map-support/register';\r\n\r\nimport {formatJSONResponse} from '@libs/apiGateway';\r\nimport {middyfy} from '@libs/lambda';\r\nimport {Client} from 'pg';\r\n\r\nconst {PG_HOST, PG_PORT, PG_DATABASE, PG_USERNAME, PG_PASSWORD} = process.env;\r\nconst dbOptions = {\r\n    host: PG_HOST,\r\n    port: PG_PORT,\r\n    database: PG_DATABASE,\r\n    user: PG_USERNAME,\r\n    password: PG_PASSWORD,\r\n    ssl: {\r\n        rejectUnauthorized: false,\r\n    },\r\n    connectionTimeoutMillis: 5000,\r\n}\r\n\r\nexport const getCats = async (e) => {\r\n    const client = new Client(dbOptions);\r\n    await client.connect();\r\n    console.log(`Get cats: `, e)\r\n\r\n    try {\r\n        // const {rows} = await client.query(\r\n        //     `select cats.id, cats.title, cats.price, cats.birthday, cats.imgLink as imgLink, b.title as breed, b.description, k.count from cats inner join breeds b on b.id = cats.breedid inner join kittens k on cats.id = k.cat_id;`\r\n        // )\r\n        const {rows} = await client.query(\r\n            `select p.title, p.description, p.price, p.imglink, s.count from products as p inner join stocks s on p.id = s.product_id`\r\n        )\r\n        return formatJSONResponse({\r\n            cats: rows,\r\n        });\r\n    } catch (e) {\r\n        return formatJSONResponse({\r\n            message: e.message,\r\n        }, 400);\r\n    } finally {\r\n        client.end()\r\n    }\r\n\r\n}\r\n\r\nexport const main = middyfy(getCats);\r\n"],"names":["formatJSONResponse","response","statusCode","headers","body","JSON","stringify","middyfy","handler","use","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","PG_HOST","PG_PORT","PG_DATABASE","PG_USERNAME","PG_PASSWORD","process","env","dbOptions","host","port","database","user","password","ssl","rejectUnauthorized","connectionTimeoutMillis","getCats","async","e","client","Client","connect","console","log","rows","query","cats","message","end","main"],"sourceRoot":""}