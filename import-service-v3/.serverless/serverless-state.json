{
  "service": {
    "service": "import-service-v3",
    "serviceObject": {
      "name": "import-service-v3"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "region": "eu-west-1",
      "apiGateway": {
        "minimumCompressionSize": 1024,
        "shouldStartNameWithService": true
      },
      "environment": {
        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
        "SQS_URL": {
          "Ref": "SQSQueue"
        },
        "SNS_ARN": {
          "Ref": "SNSTopic"
        },
        "PG_HOST": "postgres-db-0.cccgaep08fok.eu-west-1.rds.amazonaws.com",
        "PG_PORT": "5432",
        "PG_DATABASE": "catsDB",
        "PG_USERNAME": "postgres",
        "PG_PASSWORD": "jimbowimbo9W"
      },
      "lambdaHashingVersion": "20201221",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:ListBucket"
          ],
          "Resource": "arn:aws:s3:::rs-uploaded"
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:*"
          ],
          "Resource": "arn:aws:s3:::rs-uploaded"
        },
        {
          "Effect": "Allow",
          "Action": [
            "sqs:*"
          ],
          "Resource": {
            "Fn::GetAtt": [
              "SQSQueue",
              "Arn"
            ]
          }
        },
        {
          "Effect": "Allow",
          "Action": [
            "sns:*"
          ],
          "Resource": {
            "Ref": "SNSTopic"
          }
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ImportProductsFileLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/import-service-v3-dev-importProductsFile"
            }
          },
          "ImportFileParserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/import-service-v3-dev-importFileParser"
            }
          },
          "CatalogBatchProcessLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/import-service-v3-dev-catalogBatchProcess"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "import-service-v3",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/import-service-v3-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/import-service-v3-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "SQSQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "import-service-v3",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ImportProductsFileLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/import-service-v3/dev/1629810132632-2021-08-24T13:02:12.632Z/import-service-v3.zip"
              },
              "Handler": "src/functions/importProductsFile/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "import-service-v3-dev-importProductsFile",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "SQS_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_URL\"]"
                  },
                  "SNS_ARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SNS_ARN\"]"
                  },
                  "PG_HOST": "postgres-db-0.cccgaep08fok.eu-west-1.rds.amazonaws.com",
                  "PG_PORT": "5432",
                  "PG_DATABASE": "catsDB",
                  "PG_USERNAME": "postgres",
                  "PG_PASSWORD": "jimbowimbo9W"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ImportProductsFileLogGroup"
            ]
          },
          "ImportFileParserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/import-service-v3/dev/1629810132632-2021-08-24T13:02:12.632Z/import-service-v3.zip"
              },
              "Handler": "src/functions/importFileParser/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "import-service-v3-dev-importFileParser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "SQS_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_URL\"]"
                  },
                  "SNS_ARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SNS_ARN\"]"
                  },
                  "PG_HOST": "postgres-db-0.cccgaep08fok.eu-west-1.rds.amazonaws.com",
                  "PG_PORT": "5432",
                  "PG_DATABASE": "catsDB",
                  "PG_USERNAME": "postgres",
                  "PG_PASSWORD": "jimbowimbo9W"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ImportFileParserLogGroup"
            ]
          },
          "CatalogBatchProcessLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/import-service-v3/dev/1629810132632-2021-08-24T13:02:12.632Z/import-service-v3.zip"
              },
              "Handler": "src/functions/catalogBatchProcess/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "import-service-v3-dev-catalogBatchProcess",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "SQS_URL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SQS_URL\"]"
                  },
                  "SNS_ARN": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SNS_ARN\"]"
                  },
                  "PG_HOST": "postgres-db-0.cccgaep08fok.eu-west-1.rds.amazonaws.com",
                  "PG_PORT": "5432",
                  "PG_DATABASE": "catsDB",
                  "PG_USERNAME": "postgres",
                  "PG_PASSWORD": "jimbowimbo9W"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CatalogBatchProcessLogGroup"
            ]
          },
          "ImportProductsFileLambdaVersionl7F6L8e1mU9Lwxjtn2WhpsgKP00OffjzLKDDXp50RGA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ImportProductsFileLambdaFunction"
              },
              "CodeSha256": "4gf1p0mIKh3Gv8fyYvMHcojYggFUPOkoIOb1lnSUxc0="
            }
          },
          "ImportFileParserLambdaVersioniSZh5tLyTdOSle3IoaaKL6AtfYsFWp2M0Sw78t1TE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ImportFileParserLambdaFunction"
              },
              "CodeSha256": "4gf1p0mIKh3Gv8fyYvMHcojYggFUPOkoIOb1lnSUxc0="
            }
          },
          "CatalogBatchProcessLambdaVersionWTSH1vnGAq9Wtwz6byOc1ytBTu3g9RYaZDOHnBg4E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CatalogBatchProcessLambdaFunction"
              },
              "CodeSha256": "4gf1p0mIKh3Gv8fyYvMHcojYggFUPOkoIOb1lnSUxc0="
            }
          },
          "ImportFileParserCustomS31": {
            "Type": "Custom::S3",
            "Version": 1,
            "DependsOn": [
              "ImportFileParserLambdaFunction",
              "CustomDashresourceDashexistingDashs3LambdaFunction"
            ],
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashexistingDashs3LambdaFunction",
                  "Arn"
                ]
              },
              "FunctionName": "import-service-v3-dev-importFileParser",
              "BucketName": "rs-uploaded",
              "BucketConfigs": [
                {
                  "Event": "s3:ObjectCreated:*",
                  "Rules": [
                    {
                      "Prefix": "uploadedFiles/"
                    }
                  ]
                }
              ]
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "import-service-v3",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "s3",
                              "",
                              "",
                              "rs-uploaded"
                            ]
                          ]
                        },
                        "Action": [
                          "s3:PutBucketNotification",
                          "s3:GetBucketNotification"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "lambda",
                              {
                                "Ref": "AWS::Region"
                              },
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "function",
                              "*"
                            ]
                          ]
                        },
                        "Action": [
                          "lambda:AddPermission",
                          "lambda:RemovePermission"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashexistingDashs3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/import-service-v3/dev/1629810132632-2021-08-24T13:02:12.632Z/custom-resources.zip"
              },
              "FunctionName": "import-service-v3-dev-custom-resource-existing-s3",
              "Handler": "s3/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs12.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "import-service-v3-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": "",
              "MinimumCompressionSize": 1024
            }
          },
          "ApiGatewayResourceImport": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "import",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodImportGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceImport"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ImportProductsFileLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ImportProductsFileLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1629810119854": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodImportGet"
            ]
          },
          "ImportProductsFileLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ImportProductsFileLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CatalogBatchProcessEventSourceMappingSQSSQSQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 5,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "SQSQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "CatalogBatchProcessLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "SQSQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "import-service-sqs-parse"
            }
          },
          "SNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "TopicName": "createProductTopic"
            }
          },
          "SNSSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "Endpoint": "bypavelsnigirev@gmail.com",
              "Protocol": "email",
              "TopicArn": {
                "Ref": "SNSTopic"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-import-service-v3-dev-ServerlessDeploymentBucketName"
            }
          },
          "ImportProductsFileLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ImportProductsFileLambdaVersionl7F6L8e1mU9Lwxjtn2WhpsgKP00OffjzLKDDXp50RGA"
            },
            "Export": {
              "Name": "sls-import-service-v3-dev-ImportProductsFileLambdaFunctionQualifiedArn"
            }
          },
          "ImportFileParserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ImportFileParserLambdaVersioniSZh5tLyTdOSle3IoaaKL6AtfYsFWp2M0Sw78t1TE"
            },
            "Export": {
              "Name": "sls-import-service-v3-dev-ImportFileParserLambdaFunctionQualifiedArn"
            }
          },
          "CatalogBatchProcessLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CatalogBatchProcessLambdaVersionWTSH1vnGAq9Wtwz6byOc1ytBTu3g9RYaZDOHnBg4E"
            },
            "Export": {
              "Name": "sls-import-service-v3-dev-CatalogBatchProcessLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-import-service-v3-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "webpack": {
        "webpackConfig": "./webpack.config.js",
        "includeModules": true
      }
    },
    "plugins": [
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "importProductsFile": {
        "handler": "src/functions/importProductsFile/handler.main",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "import",
              "request": {
                "parameters": {}
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "import-service-v3-dev-importProductsFile",
        "package": {
          "artifact": ".serverless\\import-service-v3.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "ImportProductsFileLambdaVersionl7F6L8e1mU9Lwxjtn2WhpsgKP00OffjzLKDDXp50RGA"
      },
      "importFileParser": {
        "handler": "src/functions/importFileParser/handler.main",
        "events": [
          {
            "s3": {
              "bucket": "rs-uploaded",
              "event": "s3:ObjectCreated:*",
              "existing": true,
              "rules": [
                {
                  "prefix": "uploadedFiles/"
                }
              ]
            }
          }
        ],
        "name": "import-service-v3-dev-importFileParser",
        "package": {
          "artifact": ".serverless\\import-service-v3.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "ImportFileParserLambdaVersioniSZh5tLyTdOSle3IoaaKL6AtfYsFWp2M0Sw78t1TE"
      },
      "catalogBatchProcess": {
        "handler": "src/functions/catalogBatchProcess/handler.main",
        "events": [
          {
            "sqs": {
              "batchSize": 5,
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][6][\"Resource\"][0]"
              }
            }
          }
        ],
        "name": "import-service-v3-dev-catalogBatchProcess",
        "package": {
          "artifact": ".serverless\\import-service-v3.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "CatalogBatchProcessLambdaVersionWTSH1vnGAq9Wtwz6byOc1ytBTu3g9RYaZDOHnBg4E"
      }
    },
    "resources": {
      "Resources": {
        "SQSQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "import-service-sqs-parse"
          }
        },
        "SNSTopic": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "TopicName": "createProductTopic"
          }
        },
        "SNSSubscription": {
          "Type": "AWS::SNS::Subscription",
          "Properties": {
            "Endpoint": "bypavelsnigirev@gmail.com",
            "Protocol": "email",
            "TopicArn": {
              "Ref": "SNSTopic"
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.ts",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/import-service-v3/dev/1629810132632-2021-08-24T13:02:12.632Z",
    "artifact": ""
  }
}